// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mdb.proto

/*
Package mdb is a generated protocol buffer package.

It is generated from these files:
	mdb.proto

It has these top-level messages:
	UnitInfo
	AlarmRange
	EnumerationAlarm
	AlarmInfo
	DataEncodingInfo
	EnumValue
	ParameterTypeInfo
	ParameterInfo
	ArgumentTypeInfo
	ArgumentInfo
	ArgumentAssignmentInfo
	SignificanceInfo
	ComparisonInfo
	TransmissionConstraintInfo
	CommandInfo
	RepeatInfo
	SequenceEntryInfo
	ContainerInfo
	InputParameterInfo
	OutputParameterInfo
	AlgorithmInfo
*/
package mdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import yamcs "github.com/busoc/hadock/cmd/hdk2udp/internal/yamcs"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataSourceType int32

const (
	DataSourceType_TELEMETERED     DataSourceType = 0
	DataSourceType_DERIVED         DataSourceType = 1
	DataSourceType_CONSTANT        DataSourceType = 2
	DataSourceType_LOCAL           DataSourceType = 3
	DataSourceType_SYSTEM          DataSourceType = 4
	DataSourceType_COMMAND         DataSourceType = 5
	DataSourceType_COMMAND_HISTORY DataSourceType = 6
)

var DataSourceType_name = map[int32]string{
	0: "TELEMETERED",
	1: "DERIVED",
	2: "CONSTANT",
	3: "LOCAL",
	4: "SYSTEM",
	5: "COMMAND",
	6: "COMMAND_HISTORY",
}
var DataSourceType_value = map[string]int32{
	"TELEMETERED":     0,
	"DERIVED":         1,
	"CONSTANT":        2,
	"LOCAL":           3,
	"SYSTEM":          4,
	"COMMAND":         5,
	"COMMAND_HISTORY": 6,
}

func (x DataSourceType) Enum() *DataSourceType {
	p := new(DataSourceType)
	*p = x
	return p
}
func (x DataSourceType) String() string {
	return proto.EnumName(DataSourceType_name, int32(x))
}
func (x *DataSourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataSourceType_value, data, "DataSourceType")
	if err != nil {
		return err
	}
	*x = DataSourceType(value)
	return nil
}
func (DataSourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AlarmLevelType int32

const (
	AlarmLevelType_NORMAL   AlarmLevelType = 0
	AlarmLevelType_WATCH    AlarmLevelType = 1
	AlarmLevelType_WARNING  AlarmLevelType = 2
	AlarmLevelType_DISTRESS AlarmLevelType = 3
	AlarmLevelType_CRITICAL AlarmLevelType = 4
	AlarmLevelType_SEVERE   AlarmLevelType = 5
)

var AlarmLevelType_name = map[int32]string{
	0: "NORMAL",
	1: "WATCH",
	2: "WARNING",
	3: "DISTRESS",
	4: "CRITICAL",
	5: "SEVERE",
}
var AlarmLevelType_value = map[string]int32{
	"NORMAL":   0,
	"WATCH":    1,
	"WARNING":  2,
	"DISTRESS": 3,
	"CRITICAL": 4,
	"SEVERE":   5,
}

func (x AlarmLevelType) Enum() *AlarmLevelType {
	p := new(AlarmLevelType)
	*p = x
	return p
}
func (x AlarmLevelType) String() string {
	return proto.EnumName(AlarmLevelType_name, int32(x))
}
func (x *AlarmLevelType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlarmLevelType_value, data, "AlarmLevelType")
	if err != nil {
		return err
	}
	*x = AlarmLevelType(value)
	return nil
}
func (AlarmLevelType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type DataEncodingInfo_Type int32

const (
	DataEncodingInfo_BINARY  DataEncodingInfo_Type = 0
	DataEncodingInfo_BOOLEAN DataEncodingInfo_Type = 1
	DataEncodingInfo_FLOAT   DataEncodingInfo_Type = 2
	DataEncodingInfo_INTEGER DataEncodingInfo_Type = 3
	DataEncodingInfo_STRING  DataEncodingInfo_Type = 4
)

var DataEncodingInfo_Type_name = map[int32]string{
	0: "BINARY",
	1: "BOOLEAN",
	2: "FLOAT",
	3: "INTEGER",
	4: "STRING",
}
var DataEncodingInfo_Type_value = map[string]int32{
	"BINARY":  0,
	"BOOLEAN": 1,
	"FLOAT":   2,
	"INTEGER": 3,
	"STRING":  4,
}

func (x DataEncodingInfo_Type) Enum() *DataEncodingInfo_Type {
	p := new(DataEncodingInfo_Type)
	*p = x
	return p
}
func (x DataEncodingInfo_Type) String() string {
	return proto.EnumName(DataEncodingInfo_Type_name, int32(x))
}
func (x *DataEncodingInfo_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataEncodingInfo_Type_value, data, "DataEncodingInfo_Type")
	if err != nil {
		return err
	}
	*x = DataEncodingInfo_Type(value)
	return nil
}
func (DataEncodingInfo_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type SignificanceInfo_SignificanceLevelType int32

const (
	SignificanceInfo_NONE     SignificanceInfo_SignificanceLevelType = 1
	SignificanceInfo_WATCH    SignificanceInfo_SignificanceLevelType = 2
	SignificanceInfo_WARNING  SignificanceInfo_SignificanceLevelType = 3
	SignificanceInfo_DISTRESS SignificanceInfo_SignificanceLevelType = 4
	SignificanceInfo_CRITICAL SignificanceInfo_SignificanceLevelType = 5
	SignificanceInfo_SEVERE   SignificanceInfo_SignificanceLevelType = 6
)

var SignificanceInfo_SignificanceLevelType_name = map[int32]string{
	1: "NONE",
	2: "WATCH",
	3: "WARNING",
	4: "DISTRESS",
	5: "CRITICAL",
	6: "SEVERE",
}
var SignificanceInfo_SignificanceLevelType_value = map[string]int32{
	"NONE":     1,
	"WATCH":    2,
	"WARNING":  3,
	"DISTRESS": 4,
	"CRITICAL": 5,
	"SEVERE":   6,
}

func (x SignificanceInfo_SignificanceLevelType) Enum() *SignificanceInfo_SignificanceLevelType {
	p := new(SignificanceInfo_SignificanceLevelType)
	*p = x
	return p
}
func (x SignificanceInfo_SignificanceLevelType) String() string {
	return proto.EnumName(SignificanceInfo_SignificanceLevelType_name, int32(x))
}
func (x *SignificanceInfo_SignificanceLevelType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SignificanceInfo_SignificanceLevelType_value, data, "SignificanceInfo_SignificanceLevelType")
	if err != nil {
		return err
	}
	*x = SignificanceInfo_SignificanceLevelType(value)
	return nil
}
func (SignificanceInfo_SignificanceLevelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 0}
}

type ComparisonInfo_OperatorType int32

const (
	ComparisonInfo_EQUAL_TO                 ComparisonInfo_OperatorType = 1
	ComparisonInfo_NOT_EQUAL_TO             ComparisonInfo_OperatorType = 2
	ComparisonInfo_GREATER_THAN             ComparisonInfo_OperatorType = 3
	ComparisonInfo_GREATER_THAN_OR_EQUAL_TO ComparisonInfo_OperatorType = 4
	ComparisonInfo_SMALLER_THAN             ComparisonInfo_OperatorType = 5
	ComparisonInfo_SMALLER_THAN_OR_EQUAL_TO ComparisonInfo_OperatorType = 6
)

var ComparisonInfo_OperatorType_name = map[int32]string{
	1: "EQUAL_TO",
	2: "NOT_EQUAL_TO",
	3: "GREATER_THAN",
	4: "GREATER_THAN_OR_EQUAL_TO",
	5: "SMALLER_THAN",
	6: "SMALLER_THAN_OR_EQUAL_TO",
}
var ComparisonInfo_OperatorType_value = map[string]int32{
	"EQUAL_TO":                 1,
	"NOT_EQUAL_TO":             2,
	"GREATER_THAN":             3,
	"GREATER_THAN_OR_EQUAL_TO": 4,
	"SMALLER_THAN":             5,
	"SMALLER_THAN_OR_EQUAL_TO": 6,
}

func (x ComparisonInfo_OperatorType) Enum() *ComparisonInfo_OperatorType {
	p := new(ComparisonInfo_OperatorType)
	*p = x
	return p
}
func (x ComparisonInfo_OperatorType) String() string {
	return proto.EnumName(ComparisonInfo_OperatorType_name, int32(x))
}
func (x *ComparisonInfo_OperatorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ComparisonInfo_OperatorType_value, data, "ComparisonInfo_OperatorType")
	if err != nil {
		return err
	}
	*x = ComparisonInfo_OperatorType(value)
	return nil
}
func (ComparisonInfo_OperatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

type SequenceEntryInfo_ReferenceLocationType int32

const (
	SequenceEntryInfo_CONTAINER_START SequenceEntryInfo_ReferenceLocationType = 1
	SequenceEntryInfo_PREVIOUS_ENTRY  SequenceEntryInfo_ReferenceLocationType = 2
)

var SequenceEntryInfo_ReferenceLocationType_name = map[int32]string{
	1: "CONTAINER_START",
	2: "PREVIOUS_ENTRY",
}
var SequenceEntryInfo_ReferenceLocationType_value = map[string]int32{
	"CONTAINER_START": 1,
	"PREVIOUS_ENTRY":  2,
}

func (x SequenceEntryInfo_ReferenceLocationType) Enum() *SequenceEntryInfo_ReferenceLocationType {
	p := new(SequenceEntryInfo_ReferenceLocationType)
	*p = x
	return p
}
func (x SequenceEntryInfo_ReferenceLocationType) String() string {
	return proto.EnumName(SequenceEntryInfo_ReferenceLocationType_name, int32(x))
}
func (x *SequenceEntryInfo_ReferenceLocationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SequenceEntryInfo_ReferenceLocationType_value, data, "SequenceEntryInfo_ReferenceLocationType")
	if err != nil {
		return err
	}
	*x = SequenceEntryInfo_ReferenceLocationType(value)
	return nil
}
func (SequenceEntryInfo_ReferenceLocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 0}
}

type AlgorithmInfo_Scope int32

const (
	AlgorithmInfo_GLOBAL               AlgorithmInfo_Scope = 0
	AlgorithmInfo_COMMAND_VERIFICATION AlgorithmInfo_Scope = 1
)

var AlgorithmInfo_Scope_name = map[int32]string{
	0: "GLOBAL",
	1: "COMMAND_VERIFICATION",
}
var AlgorithmInfo_Scope_value = map[string]int32{
	"GLOBAL":               0,
	"COMMAND_VERIFICATION": 1,
}

func (x AlgorithmInfo_Scope) Enum() *AlgorithmInfo_Scope {
	p := new(AlgorithmInfo_Scope)
	*p = x
	return p
}
func (x AlgorithmInfo_Scope) String() string {
	return proto.EnumName(AlgorithmInfo_Scope_name, int32(x))
}
func (x *AlgorithmInfo_Scope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlgorithmInfo_Scope_value, data, "AlgorithmInfo_Scope")
	if err != nil {
		return err
	}
	*x = AlgorithmInfo_Scope(value)
	return nil
}
func (AlgorithmInfo_Scope) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 0} }

type UnitInfo struct {
	Unit             *string `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnitInfo) Reset()                    { *m = UnitInfo{} }
func (m *UnitInfo) String() string            { return proto.CompactTextString(m) }
func (*UnitInfo) ProtoMessage()               {}
func (*UnitInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UnitInfo) GetUnit() string {
	if m != nil && m.Unit != nil {
		return *m.Unit
	}
	return ""
}

type AlarmRange struct {
	Level            *AlarmLevelType `protobuf:"varint,1,opt,name=level,enum=mdb.AlarmLevelType" json:"level,omitempty"`
	MinInclusive     *float64        `protobuf:"fixed64,2,opt,name=minInclusive" json:"minInclusive,omitempty"`
	MaxInclusive     *float64        `protobuf:"fixed64,3,opt,name=maxInclusive" json:"maxInclusive,omitempty"`
	MinExclusive     *float64        `protobuf:"fixed64,4,opt,name=minExclusive" json:"minExclusive,omitempty"`
	MaxExclusive     *float64        `protobuf:"fixed64,5,opt,name=maxExclusive" json:"maxExclusive,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AlarmRange) Reset()                    { *m = AlarmRange{} }
func (m *AlarmRange) String() string            { return proto.CompactTextString(m) }
func (*AlarmRange) ProtoMessage()               {}
func (*AlarmRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AlarmRange) GetLevel() AlarmLevelType {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return AlarmLevelType_NORMAL
}

func (m *AlarmRange) GetMinInclusive() float64 {
	if m != nil && m.MinInclusive != nil {
		return *m.MinInclusive
	}
	return 0
}

func (m *AlarmRange) GetMaxInclusive() float64 {
	if m != nil && m.MaxInclusive != nil {
		return *m.MaxInclusive
	}
	return 0
}

func (m *AlarmRange) GetMinExclusive() float64 {
	if m != nil && m.MinExclusive != nil {
		return *m.MinExclusive
	}
	return 0
}

func (m *AlarmRange) GetMaxExclusive() float64 {
	if m != nil && m.MaxExclusive != nil {
		return *m.MaxExclusive
	}
	return 0
}

type EnumerationAlarm struct {
	Level *AlarmLevelType `protobuf:"varint,1,opt,name=level,enum=mdb.AlarmLevelType" json:"level,omitempty"`
	//  optional int64 value = 2; //removed because it is not part of XTCE and it doesn't work with ranges
	Label            *string `protobuf:"bytes,3,opt,name=label" json:"label,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EnumerationAlarm) Reset()                    { *m = EnumerationAlarm{} }
func (m *EnumerationAlarm) String() string            { return proto.CompactTextString(m) }
func (*EnumerationAlarm) ProtoMessage()               {}
func (*EnumerationAlarm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EnumerationAlarm) GetLevel() AlarmLevelType {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return AlarmLevelType_NORMAL
}

func (m *EnumerationAlarm) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

type AlarmInfo struct {
	MinViolations    *int32              `protobuf:"varint,1,opt,name=minViolations" json:"minViolations,omitempty"`
	StaticAlarmRange []*AlarmRange       `protobuf:"bytes,2,rep,name=staticAlarmRange" json:"staticAlarmRange,omitempty"`
	EnumerationAlarm []*EnumerationAlarm `protobuf:"bytes,3,rep,name=enumerationAlarm" json:"enumerationAlarm,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AlarmInfo) Reset()                    { *m = AlarmInfo{} }
func (m *AlarmInfo) String() string            { return proto.CompactTextString(m) }
func (*AlarmInfo) ProtoMessage()               {}
func (*AlarmInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AlarmInfo) GetMinViolations() int32 {
	if m != nil && m.MinViolations != nil {
		return *m.MinViolations
	}
	return 0
}

func (m *AlarmInfo) GetStaticAlarmRange() []*AlarmRange {
	if m != nil {
		return m.StaticAlarmRange
	}
	return nil
}

func (m *AlarmInfo) GetEnumerationAlarm() []*EnumerationAlarm {
	if m != nil {
		return m.EnumerationAlarm
	}
	return nil
}

type DataEncodingInfo struct {
	Type              *DataEncodingInfo_Type `protobuf:"varint,1,opt,name=type,enum=mdb.DataEncodingInfo_Type" json:"type,omitempty"`
	LittleEndian      *bool                  `protobuf:"varint,2,opt,name=littleEndian" json:"littleEndian,omitempty"`
	SizeInBits        *int32                 `protobuf:"varint,3,opt,name=sizeInBits" json:"sizeInBits,omitempty"`
	Encoding          *string                `protobuf:"bytes,4,opt,name=encoding" json:"encoding,omitempty"`
	DefaultCalibrator *string                `protobuf:"bytes,5,opt,name=defaultCalibrator" json:"defaultCalibrator,omitempty"`
	XXX_unrecognized  []byte                 `json:"-"`
}

func (m *DataEncodingInfo) Reset()                    { *m = DataEncodingInfo{} }
func (m *DataEncodingInfo) String() string            { return proto.CompactTextString(m) }
func (*DataEncodingInfo) ProtoMessage()               {}
func (*DataEncodingInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DataEncodingInfo) GetType() DataEncodingInfo_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DataEncodingInfo_BINARY
}

func (m *DataEncodingInfo) GetLittleEndian() bool {
	if m != nil && m.LittleEndian != nil {
		return *m.LittleEndian
	}
	return false
}

func (m *DataEncodingInfo) GetSizeInBits() int32 {
	if m != nil && m.SizeInBits != nil {
		return *m.SizeInBits
	}
	return 0
}

func (m *DataEncodingInfo) GetEncoding() string {
	if m != nil && m.Encoding != nil {
		return *m.Encoding
	}
	return ""
}

func (m *DataEncodingInfo) GetDefaultCalibrator() string {
	if m != nil && m.DefaultCalibrator != nil {
		return *m.DefaultCalibrator
	}
	return ""
}

type EnumValue struct {
	Value            *int64  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Label            *string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EnumValue) Reset()                    { *m = EnumValue{} }
func (m *EnumValue) String() string            { return proto.CompactTextString(m) }
func (*EnumValue) ProtoMessage()               {}
func (*EnumValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EnumValue) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *EnumValue) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

type ParameterTypeInfo struct {
	EngType          *string           `protobuf:"bytes,1,opt,name=engType" json:"engType,omitempty"`
	DataEncoding     *DataEncodingInfo `protobuf:"bytes,2,opt,name=dataEncoding" json:"dataEncoding,omitempty"`
	UnitSet          []*UnitInfo       `protobuf:"bytes,3,rep,name=unitSet" json:"unitSet,omitempty"`
	DefaultAlarm     *AlarmInfo        `protobuf:"bytes,4,opt,name=defaultAlarm" json:"defaultAlarm,omitempty"`
	EnumValue        []*EnumValue      `protobuf:"bytes,5,rep,name=enumValue" json:"enumValue,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ParameterTypeInfo) Reset()                    { *m = ParameterTypeInfo{} }
func (m *ParameterTypeInfo) String() string            { return proto.CompactTextString(m) }
func (*ParameterTypeInfo) ProtoMessage()               {}
func (*ParameterTypeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ParameterTypeInfo) GetEngType() string {
	if m != nil && m.EngType != nil {
		return *m.EngType
	}
	return ""
}

func (m *ParameterTypeInfo) GetDataEncoding() *DataEncodingInfo {
	if m != nil {
		return m.DataEncoding
	}
	return nil
}

func (m *ParameterTypeInfo) GetUnitSet() []*UnitInfo {
	if m != nil {
		return m.UnitSet
	}
	return nil
}

func (m *ParameterTypeInfo) GetDefaultAlarm() *AlarmInfo {
	if m != nil {
		return m.DefaultAlarm
	}
	return nil
}

func (m *ParameterTypeInfo) GetEnumValue() []*EnumValue {
	if m != nil {
		return m.EnumValue
	}
	return nil
}

type ParameterInfo struct {
	Name             *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	QualifiedName    *string                `protobuf:"bytes,2,opt,name=qualifiedName" json:"qualifiedName,omitempty"`
	ShortDescription *string                `protobuf:"bytes,3,opt,name=shortDescription" json:"shortDescription,omitempty"`
	LongDescription  *string                `protobuf:"bytes,4,opt,name=longDescription" json:"longDescription,omitempty"`
	Alias            []*yamcs.NamedObjectId `protobuf:"bytes,5,rep,name=alias" json:"alias,omitempty"`
	Type             *ParameterTypeInfo     `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	DataSource       *DataSourceType        `protobuf:"varint,7,opt,name=dataSource,enum=mdb.DataSourceType" json:"dataSource,omitempty"`
	Url              *string                `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ParameterInfo) Reset()                    { *m = ParameterInfo{} }
func (m *ParameterInfo) String() string            { return proto.CompactTextString(m) }
func (*ParameterInfo) ProtoMessage()               {}
func (*ParameterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ParameterInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ParameterInfo) GetQualifiedName() string {
	if m != nil && m.QualifiedName != nil {
		return *m.QualifiedName
	}
	return ""
}

func (m *ParameterInfo) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *ParameterInfo) GetLongDescription() string {
	if m != nil && m.LongDescription != nil {
		return *m.LongDescription
	}
	return ""
}

func (m *ParameterInfo) GetAlias() []*yamcs.NamedObjectId {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *ParameterInfo) GetType() *ParameterTypeInfo {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ParameterInfo) GetDataSource() DataSourceType {
	if m != nil && m.DataSource != nil {
		return *m.DataSource
	}
	return DataSourceType_TELEMETERED
}

func (m *ParameterInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type ArgumentTypeInfo struct {
	EngType          *string           `protobuf:"bytes,1,opt,name=engType" json:"engType,omitempty"`
	DataEncoding     *DataEncodingInfo `protobuf:"bytes,2,opt,name=dataEncoding" json:"dataEncoding,omitempty"`
	UnitSet          []*UnitInfo       `protobuf:"bytes,3,rep,name=unitSet" json:"unitSet,omitempty"`
	EnumValue        []*EnumValue      `protobuf:"bytes,5,rep,name=enumValue" json:"enumValue,omitempty"`
	RangeMin         *float64          `protobuf:"fixed64,6,opt,name=rangeMin" json:"rangeMin,omitempty"`
	RangeMax         *float64          `protobuf:"fixed64,7,opt,name=rangeMax" json:"rangeMax,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ArgumentTypeInfo) Reset()                    { *m = ArgumentTypeInfo{} }
func (m *ArgumentTypeInfo) String() string            { return proto.CompactTextString(m) }
func (*ArgumentTypeInfo) ProtoMessage()               {}
func (*ArgumentTypeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ArgumentTypeInfo) GetEngType() string {
	if m != nil && m.EngType != nil {
		return *m.EngType
	}
	return ""
}

func (m *ArgumentTypeInfo) GetDataEncoding() *DataEncodingInfo {
	if m != nil {
		return m.DataEncoding
	}
	return nil
}

func (m *ArgumentTypeInfo) GetUnitSet() []*UnitInfo {
	if m != nil {
		return m.UnitSet
	}
	return nil
}

func (m *ArgumentTypeInfo) GetEnumValue() []*EnumValue {
	if m != nil {
		return m.EnumValue
	}
	return nil
}

func (m *ArgumentTypeInfo) GetRangeMin() float64 {
	if m != nil && m.RangeMin != nil {
		return *m.RangeMin
	}
	return 0
}

func (m *ArgumentTypeInfo) GetRangeMax() float64 {
	if m != nil && m.RangeMax != nil {
		return *m.RangeMax
	}
	return 0
}

type ArgumentInfo struct {
	Name        *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// optional string type = 3;
	InitialValue *string `protobuf:"bytes,4,opt,name=initialValue" json:"initialValue,omitempty"`
	// repeated UnitInfo unitSet = 5;
	Type             *ArgumentTypeInfo `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ArgumentInfo) Reset()                    { *m = ArgumentInfo{} }
func (m *ArgumentInfo) String() string            { return proto.CompactTextString(m) }
func (*ArgumentInfo) ProtoMessage()               {}
func (*ArgumentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ArgumentInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ArgumentInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ArgumentInfo) GetInitialValue() string {
	if m != nil && m.InitialValue != nil {
		return *m.InitialValue
	}
	return ""
}

func (m *ArgumentInfo) GetType() *ArgumentTypeInfo {
	if m != nil {
		return m.Type
	}
	return nil
}

type ArgumentAssignmentInfo struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ArgumentAssignmentInfo) Reset()                    { *m = ArgumentAssignmentInfo{} }
func (m *ArgumentAssignmentInfo) String() string            { return proto.CompactTextString(m) }
func (*ArgumentAssignmentInfo) ProtoMessage()               {}
func (*ArgumentAssignmentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ArgumentAssignmentInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ArgumentAssignmentInfo) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type SignificanceInfo struct {
	ConsequenceLevel *SignificanceInfo_SignificanceLevelType `protobuf:"varint,1,opt,name=consequenceLevel,enum=mdb.SignificanceInfo_SignificanceLevelType" json:"consequenceLevel,omitempty"`
	ReasonForWarning *string                                 `protobuf:"bytes,2,opt,name=reasonForWarning" json:"reasonForWarning,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *SignificanceInfo) Reset()                    { *m = SignificanceInfo{} }
func (m *SignificanceInfo) String() string            { return proto.CompactTextString(m) }
func (*SignificanceInfo) ProtoMessage()               {}
func (*SignificanceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SignificanceInfo) GetConsequenceLevel() SignificanceInfo_SignificanceLevelType {
	if m != nil && m.ConsequenceLevel != nil {
		return *m.ConsequenceLevel
	}
	return SignificanceInfo_NONE
}

func (m *SignificanceInfo) GetReasonForWarning() string {
	if m != nil && m.ReasonForWarning != nil {
		return *m.ReasonForWarning
	}
	return ""
}

type ComparisonInfo struct {
	Parameter        *ParameterInfo               `protobuf:"bytes,1,opt,name=parameter" json:"parameter,omitempty"`
	Operator         *ComparisonInfo_OperatorType `protobuf:"varint,2,opt,name=operator,enum=mdb.ComparisonInfo_OperatorType" json:"operator,omitempty"`
	Value            *string                      `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *ComparisonInfo) Reset()                    { *m = ComparisonInfo{} }
func (m *ComparisonInfo) String() string            { return proto.CompactTextString(m) }
func (*ComparisonInfo) ProtoMessage()               {}
func (*ComparisonInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ComparisonInfo) GetParameter() *ParameterInfo {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *ComparisonInfo) GetOperator() ComparisonInfo_OperatorType {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ComparisonInfo_EQUAL_TO
}

func (m *ComparisonInfo) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type TransmissionConstraintInfo struct {
	Comparison       []*ComparisonInfo `protobuf:"bytes,1,rep,name=comparison" json:"comparison,omitempty"`
	Timeout          *int64            `protobuf:"varint,2,opt,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TransmissionConstraintInfo) Reset()                    { *m = TransmissionConstraintInfo{} }
func (m *TransmissionConstraintInfo) String() string            { return proto.CompactTextString(m) }
func (*TransmissionConstraintInfo) ProtoMessage()               {}
func (*TransmissionConstraintInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TransmissionConstraintInfo) GetComparison() []*ComparisonInfo {
	if m != nil {
		return m.Comparison
	}
	return nil
}

func (m *TransmissionConstraintInfo) GetTimeout() int64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

type CommandInfo struct {
	Name               *string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	QualifiedName      *string                       `protobuf:"bytes,2,opt,name=qualifiedName" json:"qualifiedName,omitempty"`
	ShortDescription   *string                       `protobuf:"bytes,3,opt,name=shortDescription" json:"shortDescription,omitempty"`
	LongDescription    *string                       `protobuf:"bytes,4,opt,name=longDescription" json:"longDescription,omitempty"`
	Alias              []*yamcs.NamedObjectId        `protobuf:"bytes,5,rep,name=alias" json:"alias,omitempty"`
	BaseCommand        *CommandInfo                  `protobuf:"bytes,6,opt,name=baseCommand" json:"baseCommand,omitempty"`
	Abstract           *bool                         `protobuf:"varint,7,opt,name=abstract" json:"abstract,omitempty"`
	Argument           []*ArgumentInfo               `protobuf:"bytes,8,rep,name=argument" json:"argument,omitempty"`
	ArgumentAssignment []*ArgumentAssignmentInfo     `protobuf:"bytes,9,rep,name=argumentAssignment" json:"argumentAssignment,omitempty"`
	Significance       *SignificanceInfo             `protobuf:"bytes,10,opt,name=significance" json:"significance,omitempty"`
	Constraint         []*TransmissionConstraintInfo `protobuf:"bytes,11,rep,name=constraint" json:"constraint,omitempty"`
	Url                *string                       `protobuf:"bytes,12,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized   []byte                        `json:"-"`
}

func (m *CommandInfo) Reset()                    { *m = CommandInfo{} }
func (m *CommandInfo) String() string            { return proto.CompactTextString(m) }
func (*CommandInfo) ProtoMessage()               {}
func (*CommandInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CommandInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CommandInfo) GetQualifiedName() string {
	if m != nil && m.QualifiedName != nil {
		return *m.QualifiedName
	}
	return ""
}

func (m *CommandInfo) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *CommandInfo) GetLongDescription() string {
	if m != nil && m.LongDescription != nil {
		return *m.LongDescription
	}
	return ""
}

func (m *CommandInfo) GetAlias() []*yamcs.NamedObjectId {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *CommandInfo) GetBaseCommand() *CommandInfo {
	if m != nil {
		return m.BaseCommand
	}
	return nil
}

func (m *CommandInfo) GetAbstract() bool {
	if m != nil && m.Abstract != nil {
		return *m.Abstract
	}
	return false
}

func (m *CommandInfo) GetArgument() []*ArgumentInfo {
	if m != nil {
		return m.Argument
	}
	return nil
}

func (m *CommandInfo) GetArgumentAssignment() []*ArgumentAssignmentInfo {
	if m != nil {
		return m.ArgumentAssignment
	}
	return nil
}

func (m *CommandInfo) GetSignificance() *SignificanceInfo {
	if m != nil {
		return m.Significance
	}
	return nil
}

func (m *CommandInfo) GetConstraint() []*TransmissionConstraintInfo {
	if m != nil {
		return m.Constraint
	}
	return nil
}

func (m *CommandInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type RepeatInfo struct {
	FixedCount       *int64         `protobuf:"varint,1,opt,name=fixedCount" json:"fixedCount,omitempty"`
	DynamicCount     *ParameterInfo `protobuf:"bytes,2,opt,name=dynamicCount" json:"dynamicCount,omitempty"`
	BitsBetween      *int32         `protobuf:"varint,3,opt,name=bitsBetween" json:"bitsBetween,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RepeatInfo) Reset()                    { *m = RepeatInfo{} }
func (m *RepeatInfo) String() string            { return proto.CompactTextString(m) }
func (*RepeatInfo) ProtoMessage()               {}
func (*RepeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RepeatInfo) GetFixedCount() int64 {
	if m != nil && m.FixedCount != nil {
		return *m.FixedCount
	}
	return 0
}

func (m *RepeatInfo) GetDynamicCount() *ParameterInfo {
	if m != nil {
		return m.DynamicCount
	}
	return nil
}

func (m *RepeatInfo) GetBitsBetween() int32 {
	if m != nil && m.BitsBetween != nil {
		return *m.BitsBetween
	}
	return 0
}

type SequenceEntryInfo struct {
	LocationInBits    *int32                                   `protobuf:"varint,1,opt,name=locationInBits" json:"locationInBits,omitempty"`
	ReferenceLocation *SequenceEntryInfo_ReferenceLocationType `protobuf:"varint,2,opt,name=referenceLocation,enum=mdb.SequenceEntryInfo_ReferenceLocationType" json:"referenceLocation,omitempty"`
	Container         *ContainerInfo                           `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
	Parameter         *ParameterInfo                           `protobuf:"bytes,4,opt,name=parameter" json:"parameter,omitempty"`
	Repeat            *RepeatInfo                              `protobuf:"bytes,5,opt,name=repeat" json:"repeat,omitempty"`
	XXX_unrecognized  []byte                                   `json:"-"`
}

func (m *SequenceEntryInfo) Reset()                    { *m = SequenceEntryInfo{} }
func (m *SequenceEntryInfo) String() string            { return proto.CompactTextString(m) }
func (*SequenceEntryInfo) ProtoMessage()               {}
func (*SequenceEntryInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SequenceEntryInfo) GetLocationInBits() int32 {
	if m != nil && m.LocationInBits != nil {
		return *m.LocationInBits
	}
	return 0
}

func (m *SequenceEntryInfo) GetReferenceLocation() SequenceEntryInfo_ReferenceLocationType {
	if m != nil && m.ReferenceLocation != nil {
		return *m.ReferenceLocation
	}
	return SequenceEntryInfo_CONTAINER_START
}

func (m *SequenceEntryInfo) GetContainer() *ContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *SequenceEntryInfo) GetParameter() *ParameterInfo {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *SequenceEntryInfo) GetRepeat() *RepeatInfo {
	if m != nil {
		return m.Repeat
	}
	return nil
}

type ContainerInfo struct {
	Name                *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	QualifiedName       *string                `protobuf:"bytes,2,opt,name=qualifiedName" json:"qualifiedName,omitempty"`
	ShortDescription    *string                `protobuf:"bytes,3,opt,name=shortDescription" json:"shortDescription,omitempty"`
	LongDescription     *string                `protobuf:"bytes,4,opt,name=longDescription" json:"longDescription,omitempty"`
	Alias               []*yamcs.NamedObjectId `protobuf:"bytes,5,rep,name=alias" json:"alias,omitempty"`
	MaxInterval         *int64                 `protobuf:"varint,6,opt,name=maxInterval" json:"maxInterval,omitempty"`
	SizeInBits          *int32                 `protobuf:"varint,7,opt,name=sizeInBits" json:"sizeInBits,omitempty"`
	BaseContainer       *ContainerInfo         `protobuf:"bytes,8,opt,name=baseContainer" json:"baseContainer,omitempty"`
	RestrictionCriteria []*ComparisonInfo      `protobuf:"bytes,9,rep,name=restrictionCriteria" json:"restrictionCriteria,omitempty"`
	Entry               []*SequenceEntryInfo   `protobuf:"bytes,10,rep,name=entry" json:"entry,omitempty"`
	Url                 *string                `protobuf:"bytes,11,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized    []byte                 `json:"-"`
}

func (m *ContainerInfo) Reset()                    { *m = ContainerInfo{} }
func (m *ContainerInfo) String() string            { return proto.CompactTextString(m) }
func (*ContainerInfo) ProtoMessage()               {}
func (*ContainerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ContainerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ContainerInfo) GetQualifiedName() string {
	if m != nil && m.QualifiedName != nil {
		return *m.QualifiedName
	}
	return ""
}

func (m *ContainerInfo) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *ContainerInfo) GetLongDescription() string {
	if m != nil && m.LongDescription != nil {
		return *m.LongDescription
	}
	return ""
}

func (m *ContainerInfo) GetAlias() []*yamcs.NamedObjectId {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *ContainerInfo) GetMaxInterval() int64 {
	if m != nil && m.MaxInterval != nil {
		return *m.MaxInterval
	}
	return 0
}

func (m *ContainerInfo) GetSizeInBits() int32 {
	if m != nil && m.SizeInBits != nil {
		return *m.SizeInBits
	}
	return 0
}

func (m *ContainerInfo) GetBaseContainer() *ContainerInfo {
	if m != nil {
		return m.BaseContainer
	}
	return nil
}

func (m *ContainerInfo) GetRestrictionCriteria() []*ComparisonInfo {
	if m != nil {
		return m.RestrictionCriteria
	}
	return nil
}

func (m *ContainerInfo) GetEntry() []*SequenceEntryInfo {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *ContainerInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type InputParameterInfo struct {
	Parameter         *ParameterInfo `protobuf:"bytes,1,opt,name=parameter" json:"parameter,omitempty"`
	InputName         *string        `protobuf:"bytes,2,opt,name=inputName" json:"inputName,omitempty"`
	ParameterInstance *int32         `protobuf:"varint,3,opt,name=parameterInstance" json:"parameterInstance,omitempty"`
	Mandatory         *bool          `protobuf:"varint,4,opt,name=mandatory" json:"mandatory,omitempty"`
	XXX_unrecognized  []byte         `json:"-"`
}

func (m *InputParameterInfo) Reset()                    { *m = InputParameterInfo{} }
func (m *InputParameterInfo) String() string            { return proto.CompactTextString(m) }
func (*InputParameterInfo) ProtoMessage()               {}
func (*InputParameterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *InputParameterInfo) GetParameter() *ParameterInfo {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *InputParameterInfo) GetInputName() string {
	if m != nil && m.InputName != nil {
		return *m.InputName
	}
	return ""
}

func (m *InputParameterInfo) GetParameterInstance() int32 {
	if m != nil && m.ParameterInstance != nil {
		return *m.ParameterInstance
	}
	return 0
}

func (m *InputParameterInfo) GetMandatory() bool {
	if m != nil && m.Mandatory != nil {
		return *m.Mandatory
	}
	return false
}

type OutputParameterInfo struct {
	Parameter        *ParameterInfo `protobuf:"bytes,1,opt,name=parameter" json:"parameter,omitempty"`
	OutputName       *string        `protobuf:"bytes,2,opt,name=outputName" json:"outputName,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *OutputParameterInfo) Reset()                    { *m = OutputParameterInfo{} }
func (m *OutputParameterInfo) String() string            { return proto.CompactTextString(m) }
func (*OutputParameterInfo) ProtoMessage()               {}
func (*OutputParameterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *OutputParameterInfo) GetParameter() *ParameterInfo {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *OutputParameterInfo) GetOutputName() string {
	if m != nil && m.OutputName != nil {
		return *m.OutputName
	}
	return ""
}

type AlgorithmInfo struct {
	Name              *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	QualifiedName     *string                `protobuf:"bytes,2,opt,name=qualifiedName" json:"qualifiedName,omitempty"`
	ShortDescription  *string                `protobuf:"bytes,3,opt,name=shortDescription" json:"shortDescription,omitempty"`
	LongDescription   *string                `protobuf:"bytes,4,opt,name=longDescription" json:"longDescription,omitempty"`
	Alias             []*yamcs.NamedObjectId `protobuf:"bytes,5,rep,name=alias" json:"alias,omitempty"`
	Scope             *AlgorithmInfo_Scope   `protobuf:"varint,6,opt,name=scope,enum=mdb.AlgorithmInfo_Scope" json:"scope,omitempty"`
	Language          *string                `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
	Text              *string                `protobuf:"bytes,8,opt,name=text" json:"text,omitempty"`
	InputParameter    []*InputParameterInfo  `protobuf:"bytes,9,rep,name=inputParameter" json:"inputParameter,omitempty"`
	OutputParameter   []*OutputParameterInfo `protobuf:"bytes,10,rep,name=outputParameter" json:"outputParameter,omitempty"`
	OnParameterUpdate []*ParameterInfo       `protobuf:"bytes,11,rep,name=onParameterUpdate" json:"onParameterUpdate,omitempty"`
	OnPeriodicRate    []int64                `protobuf:"varint,12,rep,name=onPeriodicRate" json:"onPeriodicRate,omitempty"`
	Url               *string                `protobuf:"bytes,13,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized  []byte                 `json:"-"`
}

func (m *AlgorithmInfo) Reset()                    { *m = AlgorithmInfo{} }
func (m *AlgorithmInfo) String() string            { return proto.CompactTextString(m) }
func (*AlgorithmInfo) ProtoMessage()               {}
func (*AlgorithmInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AlgorithmInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AlgorithmInfo) GetQualifiedName() string {
	if m != nil && m.QualifiedName != nil {
		return *m.QualifiedName
	}
	return ""
}

func (m *AlgorithmInfo) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *AlgorithmInfo) GetLongDescription() string {
	if m != nil && m.LongDescription != nil {
		return *m.LongDescription
	}
	return ""
}

func (m *AlgorithmInfo) GetAlias() []*yamcs.NamedObjectId {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *AlgorithmInfo) GetScope() AlgorithmInfo_Scope {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return AlgorithmInfo_GLOBAL
}

func (m *AlgorithmInfo) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *AlgorithmInfo) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *AlgorithmInfo) GetInputParameter() []*InputParameterInfo {
	if m != nil {
		return m.InputParameter
	}
	return nil
}

func (m *AlgorithmInfo) GetOutputParameter() []*OutputParameterInfo {
	if m != nil {
		return m.OutputParameter
	}
	return nil
}

func (m *AlgorithmInfo) GetOnParameterUpdate() []*ParameterInfo {
	if m != nil {
		return m.OnParameterUpdate
	}
	return nil
}

func (m *AlgorithmInfo) GetOnPeriodicRate() []int64 {
	if m != nil {
		return m.OnPeriodicRate
	}
	return nil
}

func (m *AlgorithmInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*UnitInfo)(nil), "mdb.UnitInfo")
	proto.RegisterType((*AlarmRange)(nil), "mdb.AlarmRange")
	proto.RegisterType((*EnumerationAlarm)(nil), "mdb.EnumerationAlarm")
	proto.RegisterType((*AlarmInfo)(nil), "mdb.AlarmInfo")
	proto.RegisterType((*DataEncodingInfo)(nil), "mdb.DataEncodingInfo")
	proto.RegisterType((*EnumValue)(nil), "mdb.EnumValue")
	proto.RegisterType((*ParameterTypeInfo)(nil), "mdb.ParameterTypeInfo")
	proto.RegisterType((*ParameterInfo)(nil), "mdb.ParameterInfo")
	proto.RegisterType((*ArgumentTypeInfo)(nil), "mdb.ArgumentTypeInfo")
	proto.RegisterType((*ArgumentInfo)(nil), "mdb.ArgumentInfo")
	proto.RegisterType((*ArgumentAssignmentInfo)(nil), "mdb.ArgumentAssignmentInfo")
	proto.RegisterType((*SignificanceInfo)(nil), "mdb.SignificanceInfo")
	proto.RegisterType((*ComparisonInfo)(nil), "mdb.ComparisonInfo")
	proto.RegisterType((*TransmissionConstraintInfo)(nil), "mdb.TransmissionConstraintInfo")
	proto.RegisterType((*CommandInfo)(nil), "mdb.CommandInfo")
	proto.RegisterType((*RepeatInfo)(nil), "mdb.RepeatInfo")
	proto.RegisterType((*SequenceEntryInfo)(nil), "mdb.SequenceEntryInfo")
	proto.RegisterType((*ContainerInfo)(nil), "mdb.ContainerInfo")
	proto.RegisterType((*InputParameterInfo)(nil), "mdb.InputParameterInfo")
	proto.RegisterType((*OutputParameterInfo)(nil), "mdb.OutputParameterInfo")
	proto.RegisterType((*AlgorithmInfo)(nil), "mdb.AlgorithmInfo")
	proto.RegisterEnum("mdb.DataSourceType", DataSourceType_name, DataSourceType_value)
	proto.RegisterEnum("mdb.AlarmLevelType", AlarmLevelType_name, AlarmLevelType_value)
	proto.RegisterEnum("mdb.DataEncodingInfo_Type", DataEncodingInfo_Type_name, DataEncodingInfo_Type_value)
	proto.RegisterEnum("mdb.SignificanceInfo_SignificanceLevelType", SignificanceInfo_SignificanceLevelType_name, SignificanceInfo_SignificanceLevelType_value)
	proto.RegisterEnum("mdb.ComparisonInfo_OperatorType", ComparisonInfo_OperatorType_name, ComparisonInfo_OperatorType_value)
	proto.RegisterEnum("mdb.SequenceEntryInfo_ReferenceLocationType", SequenceEntryInfo_ReferenceLocationType_name, SequenceEntryInfo_ReferenceLocationType_value)
	proto.RegisterEnum("mdb.AlgorithmInfo_Scope", AlgorithmInfo_Scope_name, AlgorithmInfo_Scope_value)
}

func init() { proto.RegisterFile("mdb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1617 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x57, 0xdd, 0x6e, 0xdb, 0x56,
	0x12, 0x8e, 0x44, 0xc9, 0x96, 0x46, 0x3f, 0x96, 0x69, 0x3b, 0xd1, 0x66, 0x17, 0x9b, 0x2c, 0x77,
	0x83, 0x38, 0xc9, 0x46, 0xbb, 0xeb, 0xc5, 0x62, 0x6f, 0x4b, 0xcb, 0x8c, 0x23, 0x40, 0x26, 0x53,
	0x8a, 0x76, 0x10, 0xa0, 0x80, 0x71, 0x44, 0x1d, 0x2b, 0x2c, 0x28, 0x52, 0xa1, 0xc8, 0xd4, 0x2e,
	0x8a, 0x5e, 0x17, 0x28, 0x50, 0xf4, 0x25, 0xfa, 0x0c, 0x05, 0x8a, 0x5e, 0xf7, 0x11, 0x8a, 0x3e,
	0x42, 0x1f, 0xa3, 0x73, 0xe6, 0x90, 0x12, 0x25, 0xcb, 0x6d, 0xd0, 0x8b, 0xe6, 0x4e, 0x1a, 0xce,
	0x39, 0x33, 0xf3, 0xcd, 0x7c, 0xc3, 0x8f, 0x50, 0x9d, 0x8c, 0x86, 0x9d, 0x69, 0x14, 0xc6, 0xa1,
	0xaa, 0xe0, 0xcf, 0xbb, 0xb5, 0x2b, 0x36, 0x71, 0x67, 0xd2, 0xa2, 0xb5, 0xa1, 0x72, 0x1a, 0x78,
	0x71, 0x2f, 0xb8, 0x08, 0xd5, 0x3a, 0x94, 0x12, 0xfc, 0xdd, 0x2e, 0xdc, 0x2f, 0xec, 0x57, 0xb5,
	0x2f, 0x0a, 0x00, 0xba, 0xcf, 0xa2, 0x89, 0xcd, 0x82, 0x31, 0x57, 0x35, 0x28, 0xfb, 0xfc, 0x2d,
	0xf7, 0xe9, 0x69, 0xf3, 0x60, 0xa7, 0x23, 0x6e, 0xa5, 0xe7, 0x7d, 0x61, 0x76, 0xae, 0xa6, 0x5c,
	0xdd, 0x85, 0xfa, 0xc4, 0x0b, 0x7a, 0x81, 0xeb, 0x27, 0x33, 0xef, 0x2d, 0x6f, 0x17, 0xd1, 0xb5,
	0x40, 0x56, 0x76, 0xb9, 0xb0, 0x2a, 0x73, 0xab, 0x17, 0x18, 0x97, 0x99, 0xb5, 0x94, 0xf3, 0x5d,
	0x58, 0xcb, 0xc2, 0xaa, 0x19, 0xd0, 0x32, 0x82, 0x64, 0xc2, 0x23, 0x16, 0x7b, 0x61, 0x40, 0x41,
	0xdf, 0x29, 0x9f, 0x06, 0xfa, 0xb0, 0x21, 0xfa, 0x28, 0x54, 0xd1, 0xe7, 0x50, 0x25, 0x07, 0x2a,
	0x76, 0x0f, 0x1a, 0x18, 0xff, 0xcc, 0x0b, 0x7d, 0xba, 0x74, 0x46, 0xf7, 0x94, 0xd5, 0x47, 0xd0,
	0x9a, 0xc5, 0x68, 0x71, 0x17, 0xa5, 0x63, 0x19, 0xca, 0x7e, 0xed, 0x60, 0x6b, 0x11, 0x41, 0x22,
	0xf2, 0x2f, 0x68, 0xf1, 0x95, 0xac, 0x30, 0x90, 0x70, 0xdd, 0x23, 0xd7, 0xd5, 0x94, 0xb5, 0x9f,
	0x0a, 0xd0, 0x3a, 0x62, 0x31, 0x33, 0x02, 0x37, 0x1c, 0x79, 0xc1, 0x98, 0xf2, 0xd8, 0x87, 0x52,
	0x8c, 0xb9, 0xa6, 0x65, 0xdc, 0xa5, 0x93, 0xab, 0x4e, 0x9d, 0x0c, 0x5d, 0xdf, 0x8b, 0x63, 0x9f,
	0x1b, 0xc1, 0xc8, 0x63, 0x01, 0xa1, 0x5b, 0x51, 0x55, 0x80, 0x99, 0xf7, 0x29, 0xef, 0x05, 0x87,
	0x5e, 0x3c, 0xa3, 0x42, 0xcb, 0x6a, 0x0b, 0x2a, 0x3c, 0x3d, 0x4e, 0xb8, 0x56, 0xd5, 0x3f, 0xc1,
	0xf6, 0x88, 0x5f, 0xb0, 0xc4, 0x8f, 0xbb, 0xcc, 0xf7, 0x86, 0x98, 0x55, 0x18, 0x11, 0xb8, 0x55,
	0xad, 0x0b, 0x25, 0xba, 0x1e, 0x60, 0xe3, 0xb0, 0x67, 0xea, 0xf6, 0xab, 0xd6, 0x2d, 0xb5, 0x06,
	0x9b, 0x87, 0x96, 0xd5, 0x37, 0x74, 0xb3, 0x55, 0x50, 0xab, 0x50, 0x7e, 0xd6, 0xb7, 0x74, 0xa7,
	0x55, 0x14, 0xf6, 0x9e, 0xe9, 0x18, 0xc7, 0x86, 0xdd, 0x52, 0xc4, 0x81, 0x81, 0x63, 0xf7, 0xcc,
	0xe3, 0x56, 0x49, 0x7b, 0x04, 0x55, 0x51, 0xee, 0x19, 0xf3, 0x13, 0x82, 0xfd, 0xad, 0xf8, 0x41,
	0x35, 0x29, 0x8b, 0x2e, 0x14, 0x29, 0xde, 0x77, 0x05, 0xd8, 0x7e, 0xc1, 0x22, 0x36, 0xe1, 0x31,
	0x8f, 0x44, 0x64, 0x82, 0x61, 0x0b, 0x36, 0x79, 0x30, 0x76, 0x32, 0x24, 0xaa, 0xea, 0x13, 0xa8,
	0x8f, 0x72, 0x30, 0xd0, 0xe1, 0x0c, 0xd9, 0x6b, 0x20, 0xfe, 0x15, 0x36, 0xc5, 0xe4, 0x0e, 0x78,
	0x9c, 0x76, 0xa0, 0x41, 0x7e, 0xf3, 0xc9, 0xfe, 0x07, 0x5e, 0x26, 0xcb, 0x97, 0x6d, 0x2a, 0xd1,
	0x65, 0xcd, 0x45, 0x47, 0xc9, 0xeb, 0x6f, 0x50, 0xe5, 0x59, 0x11, 0x08, 0x8e, 0x32, 0x77, 0x99,
	0x97, 0xa6, 0xfd, 0x5c, 0x80, 0xc6, 0x3c, 0xf9, 0x8c, 0x34, 0x01, 0xfe, 0x4d, 0xb3, 0xc6, 0xa9,
	0x7a, 0x93, 0x20, 0xc2, 0x17, 0x1e, 0x1f, 0x99, 0xc2, 0x4c, 0x35, 0xab, 0x6d, 0x9c, 0xaa, 0xd7,
	0x61, 0x14, 0x1f, 0xf1, 0x99, 0x1b, 0x79, 0x53, 0x31, 0x12, 0x72, 0x26, 0xd5, 0x3b, 0xb0, 0xe5,
	0x87, 0xc1, 0x38, 0xff, 0x40, 0x76, 0xec, 0xef, 0x50, 0xc6, 0x7b, 0xd8, 0x2c, 0x4d, 0x64, 0xb7,
	0x23, 0x59, 0x2b, 0x2e, 0x1d, 0x59, 0xc3, 0x8f, 0xb9, 0x1b, 0xf7, 0x46, 0x58, 0x97, 0x1c, 0x9e,
	0x0d, 0xaa, 0xe7, 0x36, 0x25, 0x7b, 0x1d, 0xdb, 0x87, 0x00, 0x02, 0xca, 0x41, 0x98, 0x44, 0x2e,
	0x6f, 0x6f, 0xe6, 0xf8, 0x72, 0x34, 0x37, 0xd3, 0x08, 0xd4, 0x40, 0x49, 0x22, 0xbf, 0x5d, 0xa1,
	0x3e, 0x7d, 0x8b, 0xd3, 0xaa, 0x47, 0x63, 0x9c, 0xe1, 0x20, 0xfe, 0x83, 0xda, 0xf4, 0xdb, 0x0d,
	0x10, 0xa3, 0x1d, 0x09, 0xf6, 0x9d, 0x78, 0x01, 0x55, 0x5d, 0x58, 0x58, 0xd8, 0x25, 0xd5, 0x56,
	0xd0, 0x7c, 0xa8, 0x67, 0x89, 0xaf, 0x69, 0xd1, 0x0e, 0xd4, 0x46, 0x39, 0xb4, 0x65, 0x83, 0x90,
	0x5b, 0x1e, 0x66, 0xe1, 0x31, 0x5f, 0x06, 0xcf, 0x7a, 0x90, 0x87, 0x57, 0x16, 0xb5, 0x0a, 0x89,
	0xf6, 0x3f, 0xb8, 0x9d, 0xd9, 0xf4, 0xd9, 0xcc, 0x1b, 0x07, 0x37, 0xc4, 0x9d, 0xb3, 0x42, 0xd2,
	0xe0, 0x47, 0x84, 0x77, 0x80, 0xde, 0x38, 0x2a, 0x2e, 0x0b, 0x5c, 0x09, 0x2f, 0x2e, 0x3a, 0x17,
	0x77, 0x11, 0x7f, 0x93, 0x20, 0x7f, 0x79, 0x3f, 0xb7, 0xdf, 0x9e, 0x50, 0xf0, 0xd5, 0x03, 0x4b,
	0x86, 0xc5, 0xde, 0xc3, 0x71, 0x8b, 0x38, 0x9b, 0x85, 0xc1, 0xb3, 0x30, 0x7a, 0xc9, 0xa2, 0x20,
	0x6b, 0x4c, 0x55, 0x63, 0xb0, 0xb7, 0xfe, 0x48, 0x05, 0x4a, 0xa6, 0x65, 0x1a, 0x92, 0xee, 0x2f,
	0x75, 0xa7, 0xfb, 0x5c, 0xd2, 0xfd, 0xa5, 0x6e, 0x9b, 0x82, 0xe2, 0x0a, 0x56, 0x53, 0x39, 0xea,
	0x21, 0xe1, 0x8d, 0xc1, 0xa0, 0x55, 0x12, 0xff, 0xba, 0x76, 0xcf, 0xe9, 0x75, 0xf5, 0x7e, 0xab,
	0x4c, 0xab, 0xc0, 0x38, 0x33, 0x6c, 0xa3, 0xb5, 0xa1, 0x7d, 0x59, 0x84, 0x66, 0x37, 0x9c, 0x4c,
	0x59, 0xe4, 0x61, 0x06, 0x54, 0xd6, 0x03, 0xa8, 0x4e, 0xb3, 0xa9, 0xa4, 0x7a, 0x6a, 0x07, 0xea,
	0xf2, 0xac, 0x92, 0xdb, 0x01, 0x54, 0xc2, 0x29, 0x97, 0xbb, 0xa9, 0x48, 0x55, 0xdf, 0x27, 0xaf,
	0xe5, 0xdb, 0x3a, 0x56, 0xea, 0x93, 0xad, 0x78, 0x89, 0xaa, 0x5c, 0xf1, 0x5f, 0x15, 0xa0, 0xbe,
	0xf4, 0x1c, 0xf3, 0x34, 0x3e, 0x3c, 0xd5, 0xfb, 0xe7, 0x8e, 0xd5, 0x12, 0xb3, 0x52, 0x37, 0x2d,
	0xe7, 0x7c, 0x6e, 0x29, 0x0a, 0xcb, 0xb1, 0x6d, 0xe8, 0x8e, 0x61, 0x9f, 0x3b, 0xcf, 0x71, 0xdd,
	0x29, 0xea, 0x5f, 0xa0, 0x9d, 0xb7, 0x9c, 0x5b, 0xf6, 0xc2, 0xbf, 0x24, 0xfc, 0x07, 0x27, 0x7a,
	0xbf, 0x9f, 0xf9, 0x97, 0x85, 0x7f, 0xde, 0xb2, 0xe4, 0xbf, 0xa1, 0x9d, 0xc1, 0x5d, 0x07, 0xc7,
	0x73, 0x36, 0xf1, 0x70, 0x36, 0xc2, 0xa0, 0x8b, 0xdd, 0x8d, 0x23, 0xe6, 0xa5, 0x13, 0x82, 0xcc,
	0x74, 0xe7, 0xc5, 0x21, 0x32, 0x62, 0xe2, 0x77, 0xd6, 0xd4, 0x2c, 0x78, 0x17, 0x7b, 0x13, 0x1e,
	0x26, 0x31, 0x21, 0xa3, 0x68, 0x5f, 0x2b, 0x50, 0x43, 0x9f, 0x09, 0x0b, 0x46, 0xef, 0x7f, 0x0d,
	0x3d, 0x80, 0xda, 0x90, 0xcd, 0x78, 0x9a, 0x4f, 0x4a, 0x97, 0x56, 0x56, 0xc7, 0x3c, 0x47, 0x64,
	0x2a, 0x1b, 0x8a, 0xf2, 0xdd, 0x98, 0x98, 0x5a, 0xc1, 0xdb, 0x2b, 0x2c, 0xe5, 0x0e, 0x6e, 0x1d,
	0x11, 0x60, 0x7b, 0x89, 0x64, 0x74, 0xec, 0xff, 0xa0, 0xb2, 0x6b, 0x04, 0x6b, 0x57, 0xc9, 0xfd,
	0xcf, 0x4b, 0xee, 0x2b, 0xfc, 0xc3, 0xdd, 0x34, 0xcb, 0x0d, 0x7b, 0x1b, 0x72, 0x34, 0xbe, 0x46,
	0xbd, 0xff, 0x8a, 0x56, 0x64, 0xcd, 0x69, 0xd7, 0xe8, 0xf6, 0x7b, 0xe4, 0xfa, 0x2b, 0xfd, 0x4b,
	0x17, 0x66, 0x9d, 0x66, 0xef, 0x1c, 0xc0, 0xe6, 0x53, 0xce, 0xe4, 0x23, 0xe4, 0xc4, 0x85, 0x77,
	0xc9, 0x47, 0xdd, 0x30, 0x09, 0xe2, 0xf4, 0x4d, 0xb8, 0x8f, 0xcb, 0xf2, 0x0a, 0xdb, 0xe4, 0xb9,
	0xd2, 0x5a, 0xbc, 0x91, 0x0a, 0xb8, 0xa4, 0x86, 0xf8, 0x3e, 0x3f, 0xe4, 0xf1, 0x27, 0x9c, 0xcb,
	0x26, 0x95, 0xb5, 0x6f, 0x8a, 0xb0, 0x3d, 0x48, 0x77, 0x83, 0x11, 0xc4, 0xd1, 0x15, 0xb9, 0xde,
	0x86, 0xa6, 0x1f, 0xba, 0x24, 0x33, 0x52, 0x11, 0x20, 0x95, 0xcc, 0x31, 0x6c, 0x47, 0xfc, 0x82,
	0x47, 0xb4, 0x49, 0x52, 0x87, 0x94, 0x56, 0xff, 0x94, 0x10, 0xac, 0x5e, 0xd5, 0xb1, 0x57, 0xfd,
	0x89, 0x42, 0xc8, 0x5e, 0x44, 0x26, 0xc6, 0xa2, 0x91, 0xbd, 0x4a, 0x2e, 0xe5, 0x6e, 0x66, 0xbd,
	0x4e, 0xf2, 0xd2, 0x8d, 0x95, 0xdd, 0x83, 0x8d, 0x88, 0x50, 0x22, 0xf9, 0x91, 0xc9, 0xaa, 0x05,
	0x70, 0xda, 0x07, 0xb0, 0xb7, 0x3e, 0x8f, 0x1d, 0xd8, 0xea, 0x5a, 0xa6, 0xa3, 0xf7, 0x4c, 0xa4,
	0xda, 0xc0, 0xd1, 0x6d, 0x07, 0x19, 0xad, 0x42, 0xf3, 0x85, 0x6d, 0x9c, 0xf5, 0xac, 0xd3, 0xc1,
	0xb9, 0x61, 0x3a, 0xa8, 0x5e, 0x8a, 0xda, 0x0f, 0x45, 0x68, 0x2c, 0xe7, 0xf6, 0x5e, 0xd9, 0x81,
	0xbd, 0x24, 0xfd, 0x8b, 0x08, 0xe0, 0xaa, 0x22, 0x76, 0x28, 0x2b, 0xb2, 0x6d, 0x33, 0xd5, 0x9e,
	0x0d, 0x49, 0xa3, 0x0c, 0xec, 0xca, 0x8d, 0x60, 0xff, 0x1b, 0x76, 0x22, 0x8e, 0x93, 0xe8, 0xb9,
	0x22, 0x9b, 0x6e, 0xe4, 0xe1, 0xe5, 0x1e, 0x4b, 0x49, 0xb1, 0x76, 0x83, 0x3c, 0x80, 0x32, 0x17,
	0x8d, 0x46, 0x16, 0x28, 0x73, 0xad, 0x70, 0x7d, 0x9a, 0xd2, 0x89, 0xae, 0xd1, 0x44, 0x7f, 0x06,
	0x6a, 0x2f, 0x98, 0x26, 0xf1, 0x72, 0x07, 0xdf, 0x71, 0x9b, 0x6f, 0x43, 0xd5, 0x13, 0x87, 0x73,
	0x08, 0xa3, 0x0a, 0x9d, 0x2e, 0x7c, 0x50, 0x67, 0x0b, 0x56, 0x4a, 0xc9, 0x8a, 0xde, 0x62, 0x4f,
	0x88, 0xbd, 0x7d, 0x45, 0xe0, 0x56, 0xb4, 0x17, 0xb0, 0x63, 0x25, 0xf1, 0xef, 0x0d, 0x8f, 0x00,
	0x87, 0x74, 0x7a, 0x11, 0x5f, 0xfb, 0x5e, 0x81, 0x86, 0xee, 0x8f, 0x43, 0x84, 0xeb, 0xf5, 0xe4,
	0xfd, 0x0f, 0xc6, 0x43, 0x28, 0xcf, 0xdc, 0x30, 0xd5, 0x17, 0xcd, 0x83, 0x76, 0x2a, 0x47, 0x73,
	0xf9, 0x75, 0x06, 0xe2, 0xb9, 0x58, 0x9c, 0x3e, 0x4a, 0x9c, 0x84, 0x8d, 0xa5, 0x7c, 0xab, 0x8a,
	0xbc, 0x63, 0x7e, 0x19, 0x4b, 0xa9, 0x86, 0x5f, 0x22, 0x4d, 0x6f, 0xa9, 0x4f, 0xe9, 0x20, 0xdc,
	0xa1, 0x1b, 0xd7, 0xb4, 0xf0, 0x3f, 0xb0, 0x15, 0x2e, 0x43, 0x9b, 0x8e, 0x85, 0xcc, 0x61, 0x1d,
	0xec, 0x4f, 0x61, 0x3b, 0x0c, 0xe6, 0xa6, 0xd3, 0x29, 0xb6, 0x8a, 0xa7, 0x6b, 0x72, 0x1d, 0xfc,
	0xb8, 0x95, 0xd0, 0x1d, 0x87, 0x12, 0xd5, 0x9f, 0x6b, 0x0b, 0xdf, 0x3a, 0xfa, 0x2a, 0xd9, 0x7c,
	0x35, 0xa8, 0x1f, 0x4f, 0xa1, 0x2c, 0x0b, 0x44, 0xfd, 0x70, 0xdc, 0xb7, 0x0e, 0x51, 0x4b, 0xdc,
	0x42, 0xb4, 0x77, 0xbb, 0xd6, 0xc9, 0x89, 0x6e, 0x1e, 0x9d, 0xa3, 0xa2, 0xe8, 0x3d, 0x43, 0x89,
	0xe1, 0xf4, 0x2c, 0xfc, 0x10, 0x79, 0x9c, 0x40, 0x73, 0x45, 0xb0, 0x6e, 0x41, 0xcd, 0x31, 0xfa,
	0xc6, 0x89, 0x81, 0x6f, 0x6b, 0xe3, 0x48, 0x7e, 0xb8, 0x1c, 0xe1, 0xa1, 0x33, 0xfc, 0x53, 0x20,
	0x8d, 0x62, 0x99, 0xb8, 0x29, 0x4c, 0xf1, 0xed, 0x82, 0xba, 0xa6, 0x6f, 0x09, 0xb9, 0x22, 0xbf,
	0x5c, 0x5e, 0x0d, 0x1c, 0xe3, 0x04, 0x5f, 0xe8, 0x78, 0x22, 0x0d, 0x87, 0xef, 0x72, 0x5a, 0x31,
	0x32, 0xf6, 0x73, 0xd4, 0x3a, 0x16, 0xae, 0x93, 0x8d, 0xc7, 0x1f, 0x41, 0x73, 0xe5, 0xbb, 0x12,
	0xcf, 0x9b, 0x96, 0x7d, 0x42, 0xe9, 0xce, 0xe5, 0x52, 0x21, 0x2f, 0x97, 0x8a, 0x4b, 0x72, 0x49,
	0x59, 0x92, 0x4b, 0xa5, 0x9c, 0x5c, 0x2a, 0x1f, 0xee, 0x82, 0x1a, 0x46, 0xe3, 0x4e, 0xee, 0x9b,
	0x7c, 0x98, 0x5c, 0xfc, 0x12, 0x00, 0x00, 0xff, 0xff, 0x77, 0x53, 0xee, 0x14, 0xb4, 0x0f, 0x00,
	0x00,
}
